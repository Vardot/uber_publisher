<?php
/**
 * @file
 * Drupal needs this blank file.
 */

/**
 * Implements hook_theme().
 *
 */
function uber_publisher_main_menu_default_theme($existing, $type, $theme, $path) {
  return array(
    'menu_link__menu_block__uber_publisher_main_menu_default' => array(
      'render element' => 'element',
      'file' => 'theme/theme.inc',
    ),
    'menu_tree__menu_block__uber_publisher_main_menu_default' => array(
      'render element' => 'tree',
      'file' => 'theme/theme.inc',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function uber_publisher_main_menu_default_block_info() {
  $blocks['uber_publisher_main_menu_default'] = array(
    'info' => t('Uber publisher main menu default'),
    // Menu blocks can't be cached because each menu item can have a custom access callback.
    $blocks['uber_publisher_main_menu_default']['cache'] = DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function uber_publisher_main_menu_default_block_view($delta = '') {
  $block = array();
  $uber_publisher_appearance = variable_get("uber_publisher_appearance", array());

  if ($delta = 'uber_publisher_main_menu_default') {
    $data = array();
    $tree = array();
    $config = array(
      'parent' => 'main-menu:0',
      'title_link' => 0,
      'admin_title' => 'Uber Publisher main menu',
      'level' => 1,
      'follow' => 0,
      'depth' => 2,
      'expanded' => 1,
      'sort' => 0,
      'parent_mlid' => 0,
      'menu_name' => 'main-menu',
      'delta' => 'uber_publisher_main_menu_default',
    );

    if (isset($uber_publisher_appearance['main_menu_type']) && $uber_publisher_appearance['main_menu_type'] == 'mega_menu') {
      $data['css_class'] = 'menu_minipanels';
      $config['depth'] = 1;
      $config['expanded'] = 0;
    } else {
      $data['css_class'] = 'primary-menu-block';
    }
    $menu_block = menu_tree_build($config);
    $tree = $menu_block['content'];

    $data['subject_array'] = array();
    $data['subject'] = '';
    if (isset($tree['#content'])) {
      $data['content'] = $tree['#content'];
    }
    return $data;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function uber_publisher_main_menu_default_form_uber_publisher_appearance_alter(&$form, &$form_state, $form_id) {
  if (isset($form['#uber_publisher_appearance']['main_menu_type'])) {
    $main_menu_type = $form['#uber_publisher_appearance']['main_menu_type'];
  } else {
    $main_menu_type = '';
  }

  $form['site_appearance']['main_menu_type'] = array(
    '#type' => 'select',
    '#title' => t('Main menu type'),
    '#description' => t('The type of the menu to be used.'),
    '#default_value' => $main_menu_type,
    '#options' => _uber_publisher_main_menu_types(),
  );
}

function _uber_publisher_main_menu_types() {
  $types = array();

  $types['dropdown'] = 'Dropdown Menu';
  $types['mega_menu'] = 'Mega menu';

  // @todo add hook alter or hook implement if needed.

  return $types;
}
